<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="13" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="TestJungleSocksSite" duration-ms="72090" started-at="2016-01-24T04:42:00Z" finished-at="2016-01-24T04:43:13Z">
    <groups>
    </groups>
    <test name="ChromeTests" duration-ms="4357" started-at="2016-01-24T04:42:00Z" finished-at="2016-01-24T04:42:05Z">
      <class name="tests.BrowserTests">
        <test-method status="PASS" signature="beforeTest(java.lang.String)[pri:0, instance:tests.BrowserTests@6f8a8b32]" name="beforeTest" is-config="true" duration-ms="3285" started-at="2016-01-23T20:42:00Z" finished-at="2016-01-23T20:42:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="loadHomePage()[pri:0, instance:tests.BrowserTests@6f8a8b32]" name="loadHomePage" duration-ms="944" started-at="2016-01-23T20:42:04Z" finished-at="2016-01-23T20:42:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadHomePage -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.BrowserTests@6f8a8b32]" name="afterTest" is-config="true" duration-ms="111" started-at="2016-01-23T20:42:05Z" finished-at="2016-01-23T20:42:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.BrowserTests -->
    </test> <!-- ChromeTests -->
    <test name="FirefoxTests" duration-ms="5657" started-at="2016-01-24T04:42:05Z" finished-at="2016-01-24T04:42:11Z">
      <class name="tests.BrowserTests">
        <test-method status="PASS" signature="beforeTest(java.lang.String)[pri:0, instance:tests.BrowserTests@6e2404a0]" name="beforeTest" is-config="true" duration-ms="2812" started-at="2016-01-23T20:42:05Z" finished-at="2016-01-23T20:42:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="loadHomePage()[pri:0, instance:tests.BrowserTests@6e2404a0]" name="loadHomePage" duration-ms="2829" started-at="2016-01-23T20:42:08Z" finished-at="2016-01-23T20:42:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadHomePage -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.BrowserTests@6e2404a0]" name="afterTest" is-config="true" duration-ms="12" started-at="2016-01-23T20:42:11Z" finished-at="2016-01-23T20:42:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.BrowserTests -->
    </test> <!-- FirefoxTests -->
    <test name="testValidateSalesTax" duration-ms="35228" started-at="2016-01-24T04:42:11Z" finished-at="2016-01-24T04:42:46Z">
      <class name="tests.StateTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.StateTest@7f47239c]" name="beforeTest" is-config="true" duration-ms="2465" started-at="2016-01-23T20:42:11Z" finished-at="2016-01-23T20:42:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testValidateSalesTax(java.lang.String, java.lang.Double)[pri:0, instance:tests.StateTest@7f47239c]" name="testValidateSalesTax" duration-ms="3275" started-at="2016-01-23T20:42:13Z" data-provider="TestStatesProvider" finished-at="2016-01-23T20:42:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.08]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateSalesTax -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.StateTest@7f47239c]" name="afterTest" is-config="true" duration-ms="19" started-at="2016-01-23T20:42:16Z" finished-at="2016-01-23T20:42:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.StateTest@7f47239c]" name="beforeTest" is-config="true" duration-ms="2516" started-at="2016-01-23T20:42:16Z" finished-at="2016-01-23T20:42:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testValidateSalesTax(java.lang.String, java.lang.Double)[pri:0, instance:tests.StateTest@7f47239c]" name="testValidateSalesTax" duration-ms="3311" started-at="2016-01-23T20:42:19Z" data-provider="TestStatesProvider" finished-at="2016-01-23T20:42:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.06]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateSalesTax -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.StateTest@7f47239c]" name="afterTest" is-config="true" duration-ms="9" started-at="2016-01-23T20:42:22Z" finished-at="2016-01-23T20:42:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.StateTest@7f47239c]" name="beforeTest" is-config="true" duration-ms="2485" started-at="2016-01-23T20:42:22Z" finished-at="2016-01-23T20:42:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testValidateSalesTax(java.lang.String, java.lang.Double)[pri:0, instance:tests.StateTest@7f47239c]" name="testValidateSalesTax" duration-ms="3374" started-at="2016-01-23T20:42:25Z" data-provider="TestStatesProvider" finished-at="2016-01-23T20:42:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateSalesTax -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.StateTest@7f47239c]" name="afterTest" is-config="true" duration-ms="14" started-at="2016-01-23T20:42:28Z" finished-at="2016-01-23T20:42:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.StateTest@7f47239c]" name="beforeTest" is-config="true" duration-ms="2483" started-at="2016-01-23T20:42:28Z" finished-at="2016-01-23T20:42:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testValidateSalesTax(java.lang.String, java.lang.Double)[pri:0, instance:tests.StateTest@7f47239c]" name="testValidateSalesTax" duration-ms="3344" started-at="2016-01-23T20:42:31Z" data-provider="TestStatesProvider" finished-at="2016-01-23T20:42:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[AL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateSalesTax -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.StateTest@7f47239c]" name="afterTest" is-config="true" duration-ms="13" started-at="2016-01-23T20:42:34Z" finished-at="2016-01-23T20:42:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.StateTest@7f47239c]" name="beforeTest" is-config="true" duration-ms="2462" started-at="2016-01-23T20:42:34Z" finished-at="2016-01-23T20:42:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testValidateSalesTax(java.lang.String, java.lang.Double)[pri:0, instance:tests.StateTest@7f47239c]" name="testValidateSalesTax" duration-ms="3503" started-at="2016-01-23T20:42:36Z" data-provider="TestStatesProvider" finished-at="2016-01-23T20:42:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateSalesTax -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.StateTest@7f47239c]" name="afterTest" is-config="true" duration-ms="10" started-at="2016-01-23T20:42:40Z" finished-at="2016-01-23T20:42:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.StateTest@7f47239c]" name="beforeTest" is-config="true" duration-ms="2575" started-at="2016-01-23T20:42:40Z" finished-at="2016-01-23T20:42:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testValidateSalesTax(java.lang.String, java.lang.Double)[pri:0, instance:tests.StateTest@7f47239c]" name="testValidateSalesTax" duration-ms="3338" started-at="2016-01-23T20:42:42Z" data-provider="TestStatesProvider" finished-at="2016-01-23T20:42:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ND]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateSalesTax -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.StateTest@7f47239c]" name="afterTest" is-config="true" duration-ms="13" started-at="2016-01-23T20:42:46Z" finished-at="2016-01-23T20:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.StateTest -->
    </test> <!-- testValidateSalesTax -->
    <test name="testProduct" duration-ms="26792" started-at="2016-01-24T04:42:46Z" finished-at="2016-01-24T04:43:13Z">
      <class name="tests.ProductTests">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@28a39a11]" name="beforeTest" is-config="true" duration-ms="2477" started-at="2016-01-23T20:42:46Z" finished-at="2016-01-23T20:42:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testMultipleProducts()[pri:0, instance:tests.ProductTests@28a39a11]" name="testMultipleProducts" duration-ms="2993" started-at="2016-01-23T20:42:48Z" finished-at="2016-01-23T20:42:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleProducts -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@28a39a11]" name="afterTest" is-config="true" duration-ms="7" started-at="2016-01-23T20:42:51Z" finished-at="2016-01-23T20:42:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@28a39a11]" name="beforeTest" is-config="true" duration-ms="2488" started-at="2016-01-23T20:42:51Z" finished-at="2016-01-23T20:42:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testSubTotalForProductElephant()[pri:0, instance:tests.ProductTests@28a39a11]" name="testSubTotalForProductElephant" duration-ms="2999" started-at="2016-01-23T20:42:54Z" finished-at="2016-01-23T20:42:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubTotalForProductElephant -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@28a39a11]" name="afterTest" is-config="true" duration-ms="13" started-at="2016-01-23T20:42:57Z" finished-at="2016-01-23T20:42:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@28a39a11]" name="beforeTest" is-config="true" duration-ms="2563" started-at="2016-01-23T20:42:57Z" finished-at="2016-01-23T20:42:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testSubTotalForProductGiraffe()[pri:0, instance:tests.ProductTests@28a39a11]" name="testSubTotalForProductGiraffe" duration-ms="2778" started-at="2016-01-23T20:42:59Z" finished-at="2016-01-23T20:43:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubTotalForProductGiraffe -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@28a39a11]" name="afterTest" is-config="true" duration-ms="9" started-at="2016-01-23T20:43:02Z" finished-at="2016-01-23T20:43:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@28a39a11]" name="beforeTest" is-config="true" duration-ms="2508" started-at="2016-01-23T20:43:02Z" finished-at="2016-01-23T20:43:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testSubTotalForProductLion()[pri:0, instance:tests.ProductTests@28a39a11]" name="testSubTotalForProductLion" duration-ms="2735" started-at="2016-01-23T20:43:05Z" finished-at="2016-01-23T20:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubTotalForProductLion -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@28a39a11]" name="afterTest" is-config="true" duration-ms="11" started-at="2016-01-23T20:43:07Z" finished-at="2016-01-23T20:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@28a39a11]" name="beforeTest" is-config="true" duration-ms="2483" started-at="2016-01-23T20:43:07Z" finished-at="2016-01-23T20:43:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testSubTotalForProductZebra()[pri:0, instance:tests.ProductTests@28a39a11]" name="testSubTotalForProductZebra" duration-ms="2698" started-at="2016-01-23T20:43:10Z" finished-at="2016-01-23T20:43:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubTotalForProductZebra -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@28a39a11]" name="afterTest" is-config="true" duration-ms="13" started-at="2016-01-23T20:43:13Z" finished-at="2016-01-23T20:43:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.ProductTests -->
    </test> <!-- testProduct -->
  </suite> <!-- TestJungleSocksSite -->
</testng-results>
