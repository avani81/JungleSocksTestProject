<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="11" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="TestStates" duration-ms="57403" started-at="2016-01-23T11:34:25Z" finished-at="2016-01-23T11:35:22Z">
    <groups>
    </groups>
    <test name="testValidateSalesTax" duration-ms="27263" started-at="2016-01-23T11:34:25Z" finished-at="2016-01-23T11:34:52Z">
      <class name="tests.StateTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.StateTest@64b825d4]" name="beforeTest" is-config="true" duration-ms="3310" started-at="2016-01-23T03:34:25Z" finished-at="2016-01-23T03:34:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testValidateSalesTax(java.lang.String, java.lang.Double)[pri:0, instance:tests.StateTest@64b825d4]" name="testValidateSalesTax" duration-ms="2727" started-at="2016-01-23T03:34:28Z" data-provider="TestStatesProvider" finished-at="2016-01-23T03:34:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.08]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateSalesTax -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.StateTest@64b825d4]" name="afterTest" is-config="true" duration-ms="19" started-at="2016-01-23T03:34:31Z" finished-at="2016-01-23T03:34:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.StateTest@64b825d4]" name="beforeTest" is-config="true" duration-ms="2558" started-at="2016-01-23T03:34:31Z" finished-at="2016-01-23T03:34:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testValidateSalesTax(java.lang.String, java.lang.Double)[pri:0, instance:tests.StateTest@64b825d4]" name="testValidateSalesTax" duration-ms="2725" started-at="2016-01-23T03:34:34Z" data-provider="TestStatesProvider" finished-at="2016-01-23T03:34:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.06]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateSalesTax -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.StateTest@64b825d4]" name="afterTest" is-config="true" duration-ms="11" started-at="2016-01-23T03:34:36Z" finished-at="2016-01-23T03:34:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.StateTest@64b825d4]" name="beforeTest" is-config="true" duration-ms="2502" started-at="2016-01-23T03:34:36Z" finished-at="2016-01-23T03:34:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testValidateSalesTax(java.lang.String, java.lang.Double)[pri:0, instance:tests.StateTest@64b825d4]" name="testValidateSalesTax" duration-ms="2836" started-at="2016-01-23T03:34:39Z" data-provider="TestStatesProvider" finished-at="2016-01-23T03:34:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateSalesTax -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.StateTest@64b825d4]" name="afterTest" is-config="true" duration-ms="15" started-at="2016-01-23T03:34:42Z" finished-at="2016-01-23T03:34:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.StateTest@64b825d4]" name="beforeTest" is-config="true" duration-ms="2508" started-at="2016-01-23T03:34:42Z" finished-at="2016-01-23T03:34:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testValidateSalesTax(java.lang.String, java.lang.Double)[pri:0, instance:tests.StateTest@64b825d4]" name="testValidateSalesTax" duration-ms="2731" started-at="2016-01-23T03:34:44Z" data-provider="TestStatesProvider" finished-at="2016-01-23T03:34:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[AL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateSalesTax -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.StateTest@64b825d4]" name="afterTest" is-config="true" duration-ms="8" started-at="2016-01-23T03:34:47Z" finished-at="2016-01-23T03:34:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.StateTest@64b825d4]" name="beforeTest" is-config="true" duration-ms="2462" started-at="2016-01-23T03:34:47Z" finished-at="2016-01-23T03:34:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testValidateSalesTax(java.lang.String, java.lang.Double)[pri:0, instance:tests.StateTest@64b825d4]" name="testValidateSalesTax" duration-ms="2818" started-at="2016-01-23T03:34:50Z" data-provider="TestStatesProvider" finished-at="2016-01-23T03:34:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateSalesTax -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.StateTest@64b825d4]" name="afterTest" is-config="true" duration-ms="7" started-at="2016-01-23T03:34:52Z" finished-at="2016-01-23T03:34:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.StateTest -->
    </test> <!-- testValidateSalesTax -->
    <test name="testProduct" duration-ms="30117" started-at="2016-01-23T11:34:52Z" finished-at="2016-01-23T11:35:22Z">
      <class name="tests.ProductTests">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="beforeTest" is-config="true" duration-ms="2548" started-at="2016-01-23T03:34:52Z" finished-at="2016-01-23T03:34:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testInvalidInput()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="testInvalidInput" duration-ms="0" started-at="2016-01-23T03:34:55Z" finished-at="2016-01-23T03:34:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidInput -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="afterTest" is-config="true" duration-ms="1999" started-at="2016-01-23T03:34:55Z" finished-at="2016-01-23T03:34:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="beforeTest" is-config="true" duration-ms="2545" started-at="2016-01-23T03:34:57Z" finished-at="2016-01-23T03:34:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testSubTotalForAll()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="testSubTotalForAll" duration-ms="1" started-at="2016-01-23T03:34:59Z" finished-at="2016-01-23T03:34:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubTotalForAll -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="afterTest" is-config="true" duration-ms="1995" started-at="2016-01-23T03:34:59Z" finished-at="2016-01-23T03:35:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="beforeTest" is-config="true" duration-ms="2536" started-at="2016-01-23T03:35:01Z" finished-at="2016-01-23T03:35:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testSubTotalForProductElephant()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="testSubTotalForProductElephant" duration-ms="2745" started-at="2016-01-23T03:35:04Z" finished-at="2016-01-23T03:35:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubTotalForProductElephant -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="afterTest" is-config="true" duration-ms="9" started-at="2016-01-23T03:35:07Z" finished-at="2016-01-23T03:35:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="beforeTest" is-config="true" duration-ms="2500" started-at="2016-01-23T03:35:07Z" finished-at="2016-01-23T03:35:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testSubTotalForProductGiraffe()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="testSubTotalForProductGiraffe" duration-ms="2776" started-at="2016-01-23T03:35:09Z" finished-at="2016-01-23T03:35:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubTotalForProductGiraffe -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="afterTest" is-config="true" duration-ms="10" started-at="2016-01-23T03:35:12Z" finished-at="2016-01-23T03:35:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="beforeTest" is-config="true" duration-ms="2563" started-at="2016-01-23T03:35:12Z" finished-at="2016-01-23T03:35:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testSubTotalForProductLion()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="testSubTotalForProductLion" duration-ms="2622" started-at="2016-01-23T03:35:15Z" finished-at="2016-01-23T03:35:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubTotalForProductLion -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="afterTest" is-config="true" duration-ms="10" started-at="2016-01-23T03:35:17Z" finished-at="2016-01-23T03:35:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="beforeTest" is-config="true" duration-ms="2464" started-at="2016-01-23T03:35:17Z" finished-at="2016-01-23T03:35:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testSubTotalForProductZebra()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="testSubTotalForProductZebra" duration-ms="2758" started-at="2016-01-23T03:35:20Z" finished-at="2016-01-23T03:35:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubTotalForProductZebra -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@5fe7bd8d]" name="afterTest" is-config="true" duration-ms="8" started-at="2016-01-23T03:35:22Z" finished-at="2016-01-23T03:35:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.ProductTests -->
    </test> <!-- testProduct -->
  </suite> <!-- TestStates -->
</testng-results>
