<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="42757" started-at="2016-01-24T07:28:30Z" finished-at="2016-01-24T07:29:13Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="42757" started-at="2016-01-24T07:28:30Z" finished-at="2016-01-24T07:29:13Z">
      <class name="tests.ProductTests">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@14828232]" name="beforeTest" is-config="true" duration-ms="3275" started-at="2016-01-23T23:28:30Z" finished-at="2016-01-23T23:28:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testMultipleProducts(java.lang.String, java.lang.Double)[pri:0, instance:tests.ProductTests@14828232]" name="testMultipleProducts" duration-ms="9737" started-at="2016-01-23T23:28:33Z" data-provider="TestStatesProvider" finished-at="2016-01-23T23:28:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.08]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleProducts -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@14828232]" name="afterTest" is-config="true" duration-ms="9" started-at="2016-01-23T23:28:43Z" finished-at="2016-01-23T23:28:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@14828232]" name="beforeTest" is-config="true" duration-ms="2462" started-at="2016-01-23T23:28:43Z" finished-at="2016-01-23T23:28:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testMultipleProducts(java.lang.String, java.lang.Double)[pri:0, instance:tests.ProductTests@14828232]" name="testMultipleProducts" duration-ms="3291" started-at="2016-01-23T23:28:45Z" data-provider="TestStatesProvider" finished-at="2016-01-23T23:28:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[NY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.06]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleProducts -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@14828232]" name="afterTest" is-config="true" duration-ms="11" started-at="2016-01-23T23:28:49Z" finished-at="2016-01-23T23:28:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@14828232]" name="beforeTest" is-config="true" duration-ms="2640" started-at="2016-01-23T23:28:49Z" finished-at="2016-01-23T23:28:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="testMultipleProducts(java.lang.String, java.lang.Double)[pri:0, instance:tests.ProductTests@14828232]" name="testMultipleProducts" duration-ms="3524" started-at="2016-01-23T23:28:51Z" data-provider="TestStatesProvider" finished-at="2016-01-23T23:28:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<0.0> but was:<0>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<0.0> but was:<0>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at tests.ProductTests.testMultipleProducts(ProductTests.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)
	at org.testng.TestNG.run(TestNG.java:1018)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleProducts -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@14828232]" name="afterTest" is-config="true" duration-ms="7" started-at="2016-01-23T23:28:55Z" finished-at="2016-01-23T23:28:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@14828232]" name="beforeTest" is-config="true" duration-ms="2578" started-at="2016-01-23T23:28:55Z" finished-at="2016-01-23T23:28:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testMultipleProducts(java.lang.String, java.lang.Double)[pri:0, instance:tests.ProductTests@14828232]" name="testMultipleProducts" duration-ms="3279" started-at="2016-01-23T23:28:58Z" data-provider="TestStatesProvider" finished-at="2016-01-23T23:29:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[AL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleProducts -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@14828232]" name="afterTest" is-config="true" duration-ms="8" started-at="2016-01-23T23:29:01Z" finished-at="2016-01-23T23:29:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@14828232]" name="beforeTest" is-config="true" duration-ms="2587" started-at="2016-01-23T23:29:01Z" finished-at="2016-01-23T23:29:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testMultipleProducts(java.lang.String, java.lang.Double)[pri:0, instance:tests.ProductTests@14828232]" name="testMultipleProducts" duration-ms="3309" started-at="2016-01-23T23:29:03Z" data-provider="TestStatesProvider" finished-at="2016-01-23T23:29:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleProducts -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@14828232]" name="afterTest" is-config="true" duration-ms="12" started-at="2016-01-23T23:29:07Z" finished-at="2016-01-23T23:29:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:tests.ProductTests@14828232]" name="beforeTest" is-config="true" duration-ms="2523" started-at="2016-01-23T23:29:07Z" finished-at="2016-01-23T23:29:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testMultipleProducts(java.lang.String, java.lang.Double)[pri:0, instance:tests.ProductTests@14828232]" name="testMultipleProducts" duration-ms="3462" started-at="2016-01-23T23:29:09Z" data-provider="TestStatesProvider" finished-at="2016-01-23T23:29:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ND]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleProducts -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:tests.ProductTests@14828232]" name="afterTest" is-config="true" duration-ms="12" started-at="2016-01-23T23:29:13Z" finished-at="2016-01-23T23:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- tests.ProductTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
